✅подумать над -R
✅total
✅как узнать ширину текущего терминала?

✅распределить argv на 2 массива (массив_1, массив_2)
{
    ✅функция, которая возвращает 'файл или директория?'
    ✅посчитать файлы и директории
    ✅замлочить массивы под них
    ✅проходимся по argv и записываем эл-ты по массивам
}
✅переписать функцию сортировки и вывода для файлов(массив_1) // **args -> **files 
✅работа с $(массив_2)
{
    ✅открытие директории (каждого эл-та массива)
    ✅запись всего, что там есть в массив_1
    ✅вызов функции сортировки и выода для каждого массива
}

✅начать делать рекурсию
{
    ✅понять
    ✅написать отдельную функцию
    {
        ✅сортируем и выводим с отступами
        ✅пробегаемся по массиву.
        ✅если дир - записываем содержимое в массив
        ✅переписывам путь к файлам
        ✅рекурсивно вызываем функцию для этого массива
    }
}

✅проверка на то, что файл/дир существует, если нет, то "no such file or directory"

✅посчитать макс длину названия файла в ls_rec
✅исправить сеги 
{
    ✅./ft_ls todo d
    ✅./ft_ls .
}
✅флаг -r
✅флаг -a

✅флаг -l
{
    ✅функция, которая определяет все пермишенсы у файла
    ✅функция, которая определяет вторую херню. количество файлов мб
    ✅функция, которая определяет группу
    ✅функция, которая определяет пользователя
    ✅миноры, мажоры
    ✅функция, определяющая дату файла
    ✅линки и все дела, стрелочка, lstat + stat наверное
    ✅функция, которая определяет размер файла
    ✅функция, которая определяет total
    ✅написать функцию форматирования по флагу -l
}


if (listxattr((*file)->name, NULL, 1, XATTR_NOFOLLOW) > 0)
"@"

if ((tmp = acl_get_link_np((*file)->name, ACL_TYPE_EXTENDED)))
    {
       // acl_free(tmp);
        (*file)->str[10] = '+';
    }
+

Когда -l юзать lstat
во всех остальных stat